Aurelius Application Support Guide

Accessing CCOR MAP

CCOR MAP (Compliance and Operational Reporting Mapping) is a key feature within the Aurelius application, designed to help users generate compliance reports and map operational data seamlessly. To access it, start by logging into the Aurelius application with your standard credentials—those provided during onboarding (e.g., username and SSO password). Once on the main dashboard, locate the "Settings" menu in the top-right corner—it's the gear icon next to your profile. Click it to open a dropdown, then select "System Access" from the list. This opens the admin panel, where you’ll see a tile labeled "CCOR MAP" alongside other tools like Workflow Editor and Data Sync. Click the tile, and the CCOR MAP interface will load, typically within 5-10 seconds depending on server load. No additional permissions are required for basic access unless your role restricts you to read-only mode—in that case, you’d see a prompt to request elevated rights (see RSAM section below). If you encounter a "Not Authorized" error, double-check your credentials or contact your team lead, as some configurations may require manual activation by an admin. This process eliminates the need to hunt through Confluence or email support, which users often do without clear guidance.

RSAM Request Requirements for CCOR MAP

RSAM (Risk and Security Access Management) requests are part of our security protocol to manage privileged access within the Aurelius application, but they’re not always necessary for CCOR MAP. For standard usage—viewing reports or mapping existing data—no RSAM request is required; your default credentials grant access via the admin panel (see above). However, if your task involves modifying CCOR MAP settings, creating new report templates, or integrating sensitive data (e.g., client financials), you’ll need elevated privileges. Here’s how it works: when you try an action beyond your role—like editing a compliance rule—you’ll see a pop-up saying, “Elevated access required. Submit RSAM request?” Click "Yes," and it directs you to the "Support" tab on the dashboard. From there, select "Request Access," fill out the form with your role, the feature (CCOR MAP), and a brief justification (e.g., “Need to update report mappings for Q1 audit”). Submit it, and the request routes to the security team, typically approved within 24-48 hours. Without this, users often email us directly, waiting days for clarification—RSAM formalizes it, but it’s only for advanced use, not the basics.

Finding CCOR MAP and RSAM Documentation

Documentation for CCOR MAP and RSAM processes exists, but it’s buried in our Confluence space, often leaving users frustrated. For CCOR MAP, the primary resource is the "Admin Guide" PDF, located in the "Aurelius Resources" section of Confluence. To find it, log into Confluence, search "Aurelius Resources" in the top bar, and scroll to the "Admin Tools" folder—it’s the third file down, titled "Aurelius_Admin_Guide_v3.2.pdf." Open it, and jump to page 15, where the "CCOR MAP Overview" section starts. It covers login steps, basic navigation, and sample report outputs—about 10 pages of detail, with screenshots. For RSAM, look in the same PDF under "Access Management" (page 25). This section walks you through the request form, approval timelines, and troubleshooting (e.g., what to do if denied). It’s dense—20+ pages total—but thorough. Without a direct link or FAQ, users spend hours searching or email us for pointers. This guide assumes you’ve got Confluence access; if not, your manager can grant it via the "Team Permissions" portal.

Using DCL to Summarize Documents

The Digital Content Library (DCL) is a powerful feature in the Aurelius application for managing and summarizing documents, but it’s not intuitive without guidance. Start on the main dashboard—find the "DCL" tile under "Tools" (bottom-left, next to Reports). Click it to launch the library interface. You’ll see an "Upload" button in the top-right corner—drag your document (PDF, Word, or text) there, or browse to select it. Once uploaded, it’ll appear in the file list; click it to open a preview. Look at the toolbar above the preview—there’s a "Summarize" option, third from the left, with a little document icon. Hit that, and DCL’s algorithm processes the text, pulling key points based on headers, keywords, and frequency (takes 30-60 seconds, depending on length). The summary pops up in a new window—usually 2-3 paragraphs—covering main ideas, not details. You can export it as a PDF or copy it to your clipboard. If it misses something critical, tweak the settings (gear icon next to "Summarize") to prioritize specific terms. Users often miss this feature or email us for help—it’s a game-changer once you know the steps.

Summarizing the Sales Demo Video

Yes, you can skip watching the full "Sales Force Demo" video (13 minutes, 46 seconds) and still get the gist—it’s a common pain point for users needing quick insights. The video, recorded last quarter, dives into sales strategies for our banking clients. Here’s the summary: it opens with an intro on client engagement (0:00-2:30), stressing personalized outreach. From 2:30-7:00, it covers upselling techniques, like bundling services based on client history. The meaty part (7:00-11:00) ties CRM integration to sales, showing how to sync data for better pitches. It wraps up (11:00-13:46) with a Q&A recapping CRM’s efficiency boost. The full transcript lives in Confluence under "Video Archives > Sales Training > Sales_Force_Demo_Transcript.pdf"—a 15-page doc with timestamps. Without this, users sit through the whole thing or ping us for highlights, wasting time. Key takeaway? At ~45 minutes in the full session (cut from this edit), the speaker hammers home integrating CRM data with client calls to lift sales—an actionable nugget buried deep.

Key Point from the Sales Demo Video

The "Sales Force Demo" video has a standout moment at around 45 minutes in the original recording—trimmed in the 13:46 version but still referenced. The speaker, a sales VP, zeros in on a critical insight: integrating CRM data with client calls can skyrocket sales efficiency. Here’s the context: after walking through engagement and upselling (first 30 minutes), they demo a live CRM sync (35:00-44:00), pulling client purchase history into a call script. At 45:00, they pause to drive it home—teams using this method saw a 20% uptick in conversions because reps could tailor pitches on the fly. It’s not just tech—it’s strategy: know your client before you dial. The edited video hints at this in the Q&A (11:00-13:46), but the full point’s in the transcript ("Video Archives > Sales_Force_Demo_Transcript.pdf," page 12). Users miss this gem without watching or asking us to dig it out—hours saved with a quick answer.

Creating a Native Action in the Aurelius App

Native Actions in the Aurelius application let users automate tasks—like pulling data or sending alerts—without coding, but the setup’s tricky without a guide. Start on the dashboard; find "Workflows" in the left sidebar (second option down, wrench icon). Click it, then select "Native Actions" from the submenu—it’s the third tab, after Triggers and Rules. Hit "New Action" (top-right, green plus button) to open the editor. Step one: name it (e.g., “Pull Client Report”). Step two: define the trigger—say, a button click; pick "Button" from the dropdown, then choose which button (e.g., “Run Report” on the Reports page). Step three: set the outcome—select “Data Pull,” link it to a dataset (e.g., “Client Transactions”), and map fields like Name and Amount. Save it, then toggle to sandbox mode (bottom-left switch) to test—click the button, and it should fetch the data. If it fails, check the error log under "Debug" (top-right tab). Deploy it live via "Publish" once it’s solid. Users fumble this without steps—often emailing us—or skip it entirely, missing out on automation.